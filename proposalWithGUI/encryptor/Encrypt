package encryptor;
import java.util.Scanner;

public class Encrypt {
	Scanner scan = new Scanner(System.in);
	Node first;
	Node last;
	Node2 first2;
	Node2 last2;
	int num = 1;
	String encrypted;
	
	public boolean isEmpty() {
		return (first == null); //check first if equal to null
	}

	public boolean isEmpty2() {
		return (first2 == null); //check first2 if equal to null
	}
	
	public String getEncrypted() {
		return this.encrypted;
	}
	
	//Save data to Node 
	public void insertText(String data) {
		Node newNode = new Node();
		newNode.data = data;
		
		if(isEmpty()) {
			first = newNode;
		} else {
			last.next = newNode;
			newNode.privious = last;
		}
		
		last = newNode;
		
		//Encrypt data one by one and store it to String variable
		String container = "";
		for(int i = 0; i < data.length(); i++) {
			char character = incrypt(data.charAt(i));
			container += String.valueOf(character);
		}
		
		this.encrypted = container;
		
		//save encrypted data to Node2
		Node2 newNode3 = new Node2();
		newNode3.encrypted = container;
		if(isEmpty2()) {
			first2 = newNode3;
		} else {
			last2.next = newNode3;
			newNode3.privious = last2;
		}
		last2 = newNode3;
		newNode3.displayData(num);
		num += 1;
	}
	
	//Display all data entered
	public void displayAllWords() {
		System.out.println("\nDisplay (first --> last)/////////////////////////////////////////////////////////////////////////////////////////////////////");
		Node temp = new Node();
		temp = first;
		int dataNum = 1;
		
		if(isEmpty()) {
			System.out.println("No data found to display");
		} else {
			while(temp != null) {
				temp.displayData(dataNum);
				temp = temp.next;
				dataNum++;
			}
		}
		
		System.out.println();
	}
	
	//Display all data entered backwards
	public void displayAllWordsBack() {
		System.out.println("\nDisplay (last --> first)/////////////////////////////////////////////////////////////////////////////////////////////////////");
		Node temp = new Node();
		temp = last;
		int dataNum = num - 1;
		
		if(isEmpty()) {
			System.out.println("No data found to display");
		} else {
			while(temp != null) {
				temp.displayData(dataNum);
				temp = temp.privious;
				dataNum--;
			}
		}
		
		System.out.println();
	}
	
	//Display all data entered
	public void displayAll() {
		System.out.println("\nDisplay (first --> last)/////////////////////////////////////////////////////////////////////////////////////////////////////");
		Node temp = new Node();
		Node2 temp3 = new Node2();
		temp = first;
		temp3 = first2;
		int dataNum = 1;
		
		if(isEmpty2()) {
			System.out.println("No data found to display");
		} else {
			while(temp != null && temp3 != null) {
				temp.displayData(dataNum);
				temp3.displayData(dataNum);
				temp = temp.next;
				temp3 = temp3.next;
				dataNum++;
				System.out.println();
			}
		}
	}
	
	
	//Display all data entered backwards
	public void displayAllBack() {
		System.out.println("\nDisplay (last --> first)/////////////////////////////////////////////////////////////////////////////////////////////////////");
		Node temp = new Node();
		Node2 temp3 = new Node2();
		temp = last;
		temp3 = last2;
		int dataNum = num - 1;
		
		if(isEmpty2()) {
			System.out.println("No data found to display");
		} else {
			while(temp != null && temp3 != null) {
				temp.displayData(dataNum);
				temp3.displayData(dataNum);
				temp = temp.privious;
				temp3 = temp3.privious;
				dataNum--;
				System.out.println();
			}
		}
	}
	
	public void clearAll() {
		Node temp = first;
		Node2 temp2 = first2;
		
		while(temp != null) {
			temp.next = null;
			temp2.next = null;
			temp.privious = null;
			temp2.privious = null;
			
			
			temp = temp.next;
			temp2 = temp2.next;
		}
		
		first = null;
		last = null;
		first2 = null;
		last2 = null;
		num = 1;
		
		System.out.println("List Cleard Sucessfully");
	}
	
	//encrypt data
	private char incrypt(char str) {
		switch(str) {
			case 'q':
				str = '1';
			break;
			case 'w':
				str = '2';
			break;
			case 'r':
				str = '4';
			break;
			case 't':
				str = '5';
			break;
			case 'y':
				str = '6';
			break;
			case 'p':
				str = '0';
			break;
			case 's':
				str = 'w';
			break;
			case 'd':
				str = 'e';
			break;
			case 'f':
				str = 'r';
			break;
			case 'g':
				str = 't';
			break;
			case 'h':
				str = 'y';
			break;
			case 'j':
				str = 'u';
			break;
			case 'k':
				str = 'i';
			break;
			case 'l':
				str = 'o';
			break;
			case 'z':
				str = 'p';
			break;
			case 'x':
				str = 'a';
			break;
			case 'c':
				str = '|';
			break;
			case 'v':
				str = 'd';
			break;
			case 'b':
				str = 'f';
			break;
			case 'n':
				str = 'g';
			break;
			case 'm':
				str = 'h';
			break;
			case '1':
				str = 'j';
			break;
			case '2':
				str = 'k';
			break;
			case '3':
				str = 'l';
			break;
			case '4':
				str = 'z';
			break;
			case '5':
				str = 'x';
			break;
			case '6':
				str = 'c';
			break;
			case '7':
				str = 'v';
			break;
			case '8':
				str = 'b';
			break;
			case '9':
				str = 'n';
			break;
			case '0':
				str = 'm';
			break;
			case 'Q':
				str = 'M';
			break;
			case 'W':
				str = 'N';
			break;
			case 'E':
				str = 'B';
			break;
			case 'R':
				str = 'V';
			break;
			case 'T':
				str = 'C';
			break;
			case 'Y':
				str = 'X';
			break;
			case 'U':
				str = 'Z';
			break;
			case 'I':
				str = 'L';
			break;
			case 'O':
				str = 'K';
			break;
			case 'P':
				str = 'J';
			break;
			case 'A':
				str = 'H';
			break;
			case 'S':
				str = 'G';
			break;
			case 'D':
				str = 'F';
			break;
			case 'F':
				str = 'D';
			break;
			case 'G':
				str = 'S';
			break;
			case 'H':
				str = 'A';
			break;
			case 'J':
				str = 'P';
			break;
			case 'K':
				str = 'O';
			break;
			case 'L':
				str = 'I';
			break;
			case 'Z':
				str = 'U';
			break;
			case 'X':
				str = 'Y';
			break;
			case 'C':
				str = 'T';
			break;
			case 'V':
				str = 'R';
			break;
			case 'B':
				str = 'E';
			break;
			case 'N':
				str = 'W';
			break;
			case 'M':
				str = 'Q';
			break;
			case ' ':
				str = 's';
			break;
			case '.':
				str = '!';
			break;
			case '!':
				str = '.';
			break;
			case ',':
				str = '@';
			break;
			case '@':
				str = ',';
			break;
			case '?':
				str = '#';
			break;
			case '#':
				str = '?';
			break;
			case 'a':
				str = 'q';
			break;
			case 'e':
				str = '3';
			break;
			case 'u':
				str = '7';
			break;
			case 'i':
				str = '8';
			break;
			case 'o':
				str = '9';
			break;
		}
        
        return str;
	}
}
